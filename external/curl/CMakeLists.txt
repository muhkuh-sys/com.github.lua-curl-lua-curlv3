cmake_minimum_required(VERSION 3.2.3)

PROJECT("curl")

INCLUDE(ExternalProject)


#----------------------------------------------------------------------------
#
# Build the project.
#

SET(PRJ_CMAKE_ARGS "")
LIST(APPEND PRJ_CMAKE_ARGS "-DBUILD_CURL_EXE=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DCURL_STATICLIB=ON")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_THREADED_RESOLVER=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_DEBUG=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DENABLE_CURLDEBUG=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DBUILD_TESTING=OFF")
LIST(APPEND PRJ_CMAKE_ARGS "-DLIBSSH2_DIR=${LIBSSH2_CMAKE_MODULE_PATH}")
LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}")
LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_SYSTEM_NAME=${CMAKE_SYSTEM_NAME}")
LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_C_COMPILER=${CMAKE_C_COMPILER}")
IF(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
	LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_RC_COMPILER=${CMAKE_RC_COMPILER}")
ENDIF(${CMAKE_SYSTEM_NAME} STREQUAL "Windows")
LIST(APPEND PRJ_CMAKE_ARGS "-DCMAKE_INSTALL_PREFIX=''")

ExternalProject_Add(TARGET_curl
                    PREFIX ${CMAKE_CURRENT_BINARY_DIR}/curl-7.51.0
                    URL ${CMAKE_CURRENT_SOURCE_DIR}/curl-7.51.0.tar.bz2
                    URL_HASH SHA1=f02a14bbe580d2a8cf3bf45a79d39eb595220ac7
                    CMAKE_ARGS ${PRJ_CMAKE_ARGS}
                    INSTALL_COMMAND make install DESTDIR=${CMAKE_CURRENT_BINARY_DIR}/install
)


SET(CURL_LIBRARIES_LIST "")
LIST(APPEND CURL_LIBRARIES_LIST "${CMAKE_CURRENT_BINARY_DIR}/install/lib/libcurl.a")
LIST(APPEND CURL_LIBRARIES_LIST "-lmsvcrt")
LIST(APPEND CURL_LIBRARIES_LIST "-ladvapi32")
LIST(APPEND CURL_LIBRARIES_LIST "-lshell32")
LIST(APPEND CURL_LIBRARIES_LIST "-luser32")
LIST(APPEND CURL_LIBRARIES_LIST "-lkernel32")
LIST(APPEND CURL_LIBRARIES_LIST "-lwldap32")
LIST(APPEND CURL_LIBRARIES_LIST "-lwinmm")
LIST(APPEND CURL_LIBRARIES_LIST "-lws2_32")
LIST(APPEND CURL_LIBRARIES_LIST "-lcrypt32")

SET(CURL_LIBRARIES    ${CURL_LIBRARIES_LIST}                       CACHE INTERNAL "The complete path to the library.")
SET(CURL_INCLUDE_DIR  ${CMAKE_CURRENT_BINARY_DIR}/install/include  CACHE INTERNAL "The include folder for the library.")

